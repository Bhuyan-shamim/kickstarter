RINKEBY_ENDPOINT = "https://rinkeby.infura.io/v3/037986069c1240fa84ac7e8212d37943"
ACCOUNT_MNEMONIC = "green route unlock slam split apple slogan shallow predict sort civil drift"
ADDRESS = 0x14b3E204049bBf4d5965Ee088c4a0A710FB8EEeC

import { useState, useEffect, Fragment } from 'react';
import { Card, Button, Icon, Image } from 'semantic-ui-react';
import factory from '../../ethereum/factory';
import Campaign from '../../ethereum/campaign';
//import Layout from '../components/Layout';
//import { Link } from '../routes';
import Link from 'next/link';

const CampaignIndex = () => {
  const [campaigns, setCampaigns] = useState([]);
  useEffect(() => {
    const fetchCampaigns = async () => {
      const campaignAdresses = await factory.methods.getDeployedCampaigns().call();
      var data = [];
      for (const address of campaignAdresses) {
        const campaign = Campaign(address);
        const summary = await campaign.methods.getSummary().call();
        summary.address = address;
        data.push(summary);
      }
      console.log(data);
      setCampaigns(data);
    }
    fetchCampaigns();

  }, [])

  return <Fragment>
    <div>
      <h3>Open Campaigns</h3>
      <Link href="/campaigns/new">
        <a>
          <Button
            floated="right"
            content="Create Campaign"
            icon="add circle"
            primary
          />
        </a>
      </Link>
    </div>
    <div>
      {campaigns.length == 0 && <p>No Campaigns to show!</p>}
      {campaigns.length > 0 && <h1>{campaigns.length} campaigns</h1>}
      {campaigns.length > 0 && campaigns.map((campaign) => (
        <div key={campaign.address}>
          <Card>
            <Image src='https://www.passionateinmarketing.com/wp-content/uploads/2020/07/campaign-blog-graphic-01-1080x675.jpg' wrapped ui={false} />
            <Card.Content>
              <Card.Header>{campaign.minimumContribution} minimum contribution</Card.Header>
              <Card.Meta>
                <span className='date'>Joined in 2015</span>
              </Card.Meta>
              <Card.Description>
                Matthew is a musician living in Nashville.
              </Card.Description>
            </Card.Content>
            <Card.Content extra>
              <Link href={`/campaigns/${campaign.address}`}>
                <a >
                  <Icon name='user' />
                    See Details
                 </a></Link>
            </Card.Content>
          </Card>

        </div>
      ))}
    </div>
  </Fragment>

}

export default CampaignIndex;

//campaigns/new

import { Form, Button, Input, Message } from 'semantic-ui-react';
import { useState, Fragment } from 'react';
import { useRouter } from 'next/router';
//import Layout from '../../components/Layout';
import factory from '../../../ethereum/factory';
import web3 from '../../../ethereum/web3';


const NewCampaign = () => {
    const router = useRouter();
    const [errorMessage, setErrorMessage] = useState('');
    const [loading, setLoading] = useState(false);
    const [minimumContribution, setMinimumContribution] = useState(0);

    const onSubmit = async () => {
        setLoading(true);
        setErrorMessage('');
        
        try {
            const accounts = await web3.eth.getAccounts();
            console.log(accounts);
            await factory.methods
              .createCampaign(minimumContribution)
              .send({
                from: accounts[0]
              });
      
            router.push('/');
          } catch (err) {
            setErrorMessage(err.message);
        }
        setLoading(false);
    }

    return <Fragment>
        <h3> Create a New Campaign</h3>
        <Form onSubmit={onSubmit} error={errorMessage}>
          <Form.Field>
            <label>Minimum Contribution</label>
            <Input
              label="wei"
              labelPosition="right"
              value={minimumContribution}
              onChange={event =>
                setMinimumContribution(event.target.value)}
            />
            </Form.Field>
            {errorMessage && <Message error header="Oops!" content={errorMessage} />}
          <Button loading={loading} primary>
            Create!
          </Button>
        </Form>
    </Fragment>
}


export default NewCampaign;